version: '3.8'

services:
  breachpilot:
    build: .
    container_name: breachpilot-app
    ports:
      - "5000:5000"
    environment:
      - BREACHPILOT_ENV=production
      - BREACHPILOT_DEMO_MODE=true
      - BREACHPILOT_REAL_TOOLS=false
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./reports:/app/reports
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - breachpilot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: breachpilot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - breachpilot-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for production database
  postgres:
    image: postgres:15-alpine
    container_name: breachpilot-db
    environment:
      - POSTGRES_DB=breachpilot
      - POSTGRES_USER=breachpilot
      - POSTGRES_PASSWORD=${DB_PASSWORD:-breachpilot123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - breachpilot-network
    restart: unless-stopped

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: breachpilot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - breachpilot
    networks:
      - breachpilot-network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  breachpilot-network:
    driver: bridge