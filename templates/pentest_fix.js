        async function updateStatus() {
            if (!chainId) return;

            try {
                const resp = await fetch(`/api/attack-chain/${chainId}/status`);
                const data = await resp.json();
                
                console.log('Status data:', data); // Debug
                
                if (data.current_task) updateCurrentTask(data.current_task);
                
                if (data.results) {
                    // Port scan results
                    if (data.results.scan && Object.keys(data.results.scan).length > 0) {
                        updateProgress('recon', 100, 'Complete');
                        displayScanSummary(data.results);
                    }
                    
                    // AI Analysis results
                    if (data.results.vulnerabilities && Object.keys(data.results.vulnerabilities).length > 0) {
                        updateProgress('ai', 100, 'Complete');
                        displayVulnerabilities(data.results.vulnerabilities);
                    }
                }
                
                if (data.logs && data.logs.length > lastLogCount) {
                    updateLogs(data.logs);
                    lastLogCount = data.logs.length;
                }
                
                if (data.status === 'completed' || data.status === 'failed') {
                    clearInterval(statusInterval);
                }
                
            } catch (error) {
                console.error('Status error:', error);
            }
        }

        function updateCurrentTask(taskName) {
            if (taskName && taskName.includes('Port')) {
                updateProgress('recon', 50, 'Scanning...');
            } else if (taskName && (taskName.includes('CVE') || taskName.includes('AI'))) {
                updateProgress('ai', 50, 'AI Analyzing...');
            } else if (taskName && taskName.includes('PoC')) {
                updateProgress('exploit', 50, 'Hunting PoCs...');
            }
        }

        function displayScanSummary(results) {
            const section = document.getElementById('scan-summary');
            const content = document.getElementById('scan-content');
            
            section.classList.remove('hidden');
            
            const scan = results.scan || {};
            const ports = scan.ports || [];
            
            content.innerHTML = `
                <div class=\"bg-slate-800/50 p-3 rounded\">
                    <div class=\"text-sm font-medium text-blue-400 mb-2\">Target: ${scan.target || 'Unknown'}</div>
                </div>
                
                <div class=\"bg-slate-800/50 p-3 rounded\">
                    <div class=\"text-sm font-medium text-green-400 mb-2\">Open Ports (${ports.length})</div>
                    <div class=\"text-xs space-y-1\">
                        ${ports.map(p => `
                            <div class=\"flex justify-between\">
                                <span class=\"text-green-400\">${p.port}/${p.protocol}</span>
                                <span class=\"text-gray-400\">${p.service} ${p.version || ''}</span>
                            </div>
                        `).join('')}
                    </div>
                </div>
            `;
        }
