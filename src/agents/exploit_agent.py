from pathlib import Path
import subprocess
import json


def run_exploit(target: str, poc_info: dict, work_dir: Path, authorize: bool = False) -> Path:
    """Run a minimal Zerologon tester (placeholder PoC). Saves log to file and returns path.
    If authorize is False, skips execution.
    """
    log_path = work_dir / "exploit.log"
    if not authorize:
        log_path.write_text("Authorization not granted. Skipping exploit.\n")
        return log_path

    tester = work_dir / "zerologon_tester.py"
    tester.write_text(
        """#!/usr/bin/env python3\nimport sys, socket\n\nif __name__ == '__main__':\n    ip = sys.argv[1] if len(sys.argv) > 1 else '127.0.0.1'\n    s = socket.socket()\n    s.settimeout(3)\n    res = s.connect_ex((ip, 445))\n    print('VULNERABLE' if res == 0 else 'NOT_ACCESSIBLE')\n"""
    )
    try:
        tester.chmod(0o755)
    except Exception:
        pass

    try:
        out = subprocess.run(["python3", str(tester), target], capture_output=True, text=True, timeout=30)
        log_path.write_text(out.stdout + "\n" + out.stderr)
    except Exception as e:
        log_path.write_text(f"error: {e}\n")
    return log_path


